set cut_paste_input [stack 0]
version 12.0 v8
push $cut_paste_input
Group {
 name ENHANCE
 onCreate "def exe(func, *args):\n    allowed_knobs = \['Boolean_Knob', 'PyScript_Knob']\n    exclude_knobs = \['selected']\n\n    knob = nuke.thisKnob()\n    allowed_knob = knob.Class() in allowed_knobs and not knob.name() in exclude_knobs\n\n    try:\n        return eval(func)(*args)\n    except Exception as e:\n\n        if not allowed_knob:\n            return\n\n        if not 'vina' in str(e):\n            return\n\n        message = 'ask <b>Francisco Contreras</b> for the script <b>\"\{\}\"</b>, since the script for this method is not embedded in the node. Thank you.'.format(\n            func)\n        nuke.message(message)\n"
 tile_color 0xa2b275ff
 selected true
 xpos -1434
 ypos 1276
 addUserKnob {20 controls l Controls}
 addUserKnob {26 comfyui_gizmo l ComfyUIGizmo +INVISIBLE T "This knob only allows the read and backup to be outside the gizmo !"}
 addUserKnob {7 upscale R 1 4}
 upscale 1.5
 addUserKnob {41 steps_ l steps T BasicScheduler.steps_}
 addUserKnob {41 denoise_ l denoise T BasicScheduler.denoise_}
 addUserKnob {26 ""}
 addUserKnob {41 comfyui_submit l submit T Run.comfyui_submit}
 addUserKnob {41 backup_result -STARTLINE T Run.backup_result}
}
 BackdropNode {
  inputs 0
  name UPSCALE_WITH_MODEL_BD
  tile_color 0xb2976d01
  label "<font face=\"Bitstream Vera Sans\" size=4>UPSCALE WITH MODEL</font>"
  note_font_size 20
  xpos -532
  ypos -465
  bdwidth 361
  bdheight 300
  addUserKnob {20 "Setup Tools" +INVISIBLE}
  addUserKnob {1 data l Data}
  data "\{\"color_code\": \"c3\"\}"
 }
 Group {
  inputs 0
  name LoadVAE
  tile_color 0x335c7a01
  xpos -199
  ypos 94
  addUserKnob {20 Controls}
  addUserKnob {4 vae_name_ l vae_name M {ae.safetensors vae-ft-mse-840000-ema-pruned.safetensors}}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'vae_name_'\n    ], \n    'inputs': \[], \n    'class_type': 'VAELoader', \n    'outputs': \[\n        'vae'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
set N387d3640 [stack 0]
push $N387d3640
 Dot {
  name Dot1
  xpos -387
  ypos -119
  hide_input true
 }
 Input {
  inputs 0
  name Image
  xpos -317
  ypos -381
 }
 Group {
  inputs 0
  name LoadUpscaleModel
  tile_color 0x335c7a01
  xpos -497
  ypos -299
  addUserKnob {20 Controls}
  addUserKnob {4 model_name_ l model_name M {4x_NMKD-Siax_200k.pth}}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'model_name_'\n    ], \n    'inputs': \[], \n    'class_type': 'UpscaleModelLoader', \n    'outputs': \[\n        'upscale_model'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
 Group {
  inputs 2
  name UpscaleImageusingModel
  xpos -317
  ypos -299
  addUserKnob {20 Controls}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'upscale_model'\n            ], \n            'name': 'upscale_model'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'image'\n            ], \n            'name': 'image'\n        \}\n    ], \n    'class_type': 'ImageUpscaleWithModel', \n    'outputs': \[\n        'image'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name upscale_model
  }
  Input {
   inputs 0
   name image
   number 1
  }
  Output {
   name Output1
  }
 end_group
 Group {
  name UpscaleImageBy
  xpos -317
  ypos -227
  addUserKnob {20 Controls}
  addUserKnob {4 upscale_method_ l upscale_method M {nearest-exact bilinear area bicubic lanczos}}
  addUserKnob {7 scale_by_ l scale_by R 0.01 8}
  scale_by_ {{"parent.upscale / 4"}}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'upscale_method_', \n        'scale_by_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'image'\n            ], \n            'name': 'image'\n        \}\n    ], \n    'class_type': 'ImageScaleBy', \n    'outputs': \[\n        'image'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name image
  }
  Output {
   name Output1
  }
 end_group
 Group {
  inputs 2
  name VAEEncode
  tile_color 0xf7903101
  xpos -317
  ypos -122
  addUserKnob {20 Controls}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'image'\n            ], \n            'name': 'pixels'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'vae'\n            ], \n            'name': 'vae'\n        \}\n    ], \n    'class_type': 'VAEEncode', \n    'outputs': \[\n        'latent'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name pixels
  }
  Input {
   inputs 0
   name vae
   number 1
  }
  Output {
   name Output1
  }
 end_group
 Group {
  inputs 0
  name UnetLoaderGGUF
  xpos 239
  ypos -191
  addUserKnob {20 Controls}
  addUserKnob {4 unet_name_ l unet_name M {Wan2.1_14B_VACE-Q5_K_S.gguf flux1-dev-Q4_0.gguf flux1-dev-Q8_0.gguf}}
  unet_name_ flux1-dev-Q8_0.gguf
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'unet_name_'\n    ], \n    'inputs': \[], \n    'class_type': 'UnetLoaderGGUF', \n    'outputs': \[\n        'model'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
 Group {
  name ModelSamplingFlux
  xpos 239
  ypos -131
  addUserKnob {20 Controls}
  addUserKnob {7 max_shift_ l max_shift R 0 100}
  max_shift_ 1.15
  addUserKnob {7 base_shift_ l base_shift R 0 100}
  base_shift_ 0.5
  addUserKnob {3 width_ l width}
  width_ 1024
  addUserKnob {3 height_ l height}
  height_ 1024
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'max_shift_', \n        'base_shift_', \n        'width_', \n        'height_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'model'\n            ], \n            'name': 'model'\n        \}\n    ], \n    'class_type': 'ModelSamplingFlux', \n    'outputs': \[\n        'model'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name model
  }
  Output {
   name Output1
  }
 end_group
set N3cb612d0 [stack 0]
 Group {
  name BasicScheduler
  xpos 239
  ypos -95
  addUserKnob {20 Controls}
  addUserKnob {4 scheduler_ l scheduler M {normal karras exponential sgm_uniform simple ddim_uniform beta}}
  scheduler_ karras
  addUserKnob {3 steps_ l steps}
  steps_ 20
  addUserKnob {7 denoise_ l denoise}
  denoise_ 0.85
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'scheduler_', \n        'steps_', \n        'denoise_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'model'\n            ], \n            'name': 'model'\n        \}\n    ], \n    'class_type': 'BasicScheduler', \n    'outputs': \[\n        'sigmas'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name model
  }
  Output {
   name Output1
  }
 end_group
 Group {
  inputs 0
  name KSamplerSelect
  xpos -244
  ypos -18
  addUserKnob {20 Controls}
  addUserKnob {4 sampler_name_ l sampler_name M {euler euler_cfg_pp euler_ancestral euler_ancestral_cfg_pp heun heunpp2 dpm_2 dpm_2_ancestral lms dpm_fast dpm_adaptive dpmpp_2s_ancestral dpmpp_sde dpmpp_sde_gpu dpmpp_2m dpmpp_2m_sde dpmpp_2m_sde_gpu dpmpp_3m_sde dpmpp_3m_sde_gpu ddpm lcm ipndm ipndm_v deis ddim uni_pc uni_pc_bh2}}
  sampler_name_ dpmpp_2m
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'sampler_name_'\n    ], \n    'inputs': \[], \n    'class_type': 'KSamplerSelect', \n    'outputs': \[\n        'sampler'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
 Group {
  inputs 0
  name DualCLIPLoaderGGUF
  xpos -28
  ypos -320
  addUserKnob {20 Controls}
  addUserKnob {4 clip_name1_ l clip_name1 M {clip_l.safetensors fluxTextencoderT5XxlFp8_v10.safetensors t5-v1_1-xxl-encoder-Q8_0.gguf t5xxl_fp16.safetensors t5xxl_fp8_e4m3fn.safetensors umt5_xxl_fp8_e4m3fn_scaled.safetensors}}
  addUserKnob {4 clip_name2_ l clip_name2 M {clip_l.safetensors fluxTextencoderT5XxlFp8_v10.safetensors t5-v1_1-xxl-encoder-Q8_0.gguf t5xxl_fp16.safetensors t5xxl_fp8_e4m3fn.safetensors umt5_xxl_fp8_e4m3fn_scaled.safetensors}}
  clip_name2_ t5-v1_1-xxl-encoder-Q8_0.gguf
  addUserKnob {4 type_ l type M {sdxl sd3 flux hunyuan_video hidream}}
  type_ flux
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'clip_name1_', \n        'clip_name2_', \n        'type_'\n    ], \n    'inputs': \[], \n    'class_type': 'DualCLIPLoaderGGUF', \n    'outputs': \[\n        'clip'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
 Group {
  name CLIPTextEncodePrompt
  xpos -28
  ypos -251
  addUserKnob {20 Controls}
  addUserKnob {43 text_ l text t "The text to be encoded."}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'text_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'clip'\n            ], \n            'name': 'clip'\n        \}\n    ], \n    'class_type': 'CLIPTextEncode', \n    'outputs': \[\n        'conditioning'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name clip
  }
  Output {
   name Output1
   selected true
  }
 end_group
push $N3cb612d0
 Group {
  inputs 2
  name BasicGuider
  xpos -28
  ypos -131
  addUserKnob {20 Controls}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'model'\n            ], \n            'name': 'model'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'conditioning'\n            ], \n            'name': 'conditioning'\n        \}\n    ], \n    'class_type': 'BasicGuider', \n    'outputs': \[\n        'guider'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name model
  }
  Input {
   inputs 0
   name conditioning
   number 1
  }
  Output {
   name Output1
  }
 end_group
 Group {
  inputs 0
  name RandomNoise
  xpos 229
  ypos -18
  addUserKnob {20 Controls}
  addUserKnob {3 noise_seed_ l noise_seed}
  noise_seed_ 6763
  addUserKnob {6 randomize t "Allows the linked Run to automatically change the seed by randomizing the number." -STARTLINE}
  randomize true
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'noise_seed_'\n    ], \n    'inputs': \[], \n    'class_type': 'RandomNoise', \n    'outputs': \[\n        'noise'\n    ], \n    'output_node': false\n\}"}
 }
  Output {
   inputs 0
   name Output1
  }
 end_group
 Group {
  inputs 5
  name SamplerCustomAdvanced
  xpos -28
  ypos -18
  addUserKnob {20 Controls}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'noise'\n            ], \n            'name': 'noise'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'guider'\n            ], \n            'name': 'guider'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'sampler'\n            ], \n            'name': 'sampler'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'sigmas'\n            ], \n            'name': 'sigmas'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'latent'\n            ], \n            'name': 'latent_image'\n        \}\n    ], \n    'class_type': 'SamplerCustomAdvanced', \n    'outputs': \[\n        'latent', \n        'latent'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name noise
  }
  Input {
   inputs 0
   name guider
   number 1
  }
  Input {
   inputs 0
   name sampler
   number 2
  }
  Input {
   inputs 0
   name sigmas
   number 3
  }
  Input {
   inputs 0
   name latent_image
   number 4
  }
  Output {
   name Output1
  }
 end_group
 Group {
  inputs 2
  name VAEDecode
  tile_color 0xf7903101
  xpos -28
  ypos 94
  addUserKnob {20 Controls}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'latent'\n            ], \n            'name': 'samples'\n        \}, \n        \{\n            'opt': false, \n            'outputs': \[\n                'vae'\n            ], \n            'name': 'vae'\n        \}\n    ], \n    'class_type': 'VAEDecode', \n    'outputs': \[\n        'image'\n    ], \n    'output_node': false\n\}"}
 }
  Input {
   inputs 0
   name samples
  }
  Input {
   inputs 0
   name vae
   number 1
  }
  Output {
   name Output1
  }
 end_group
 Group {
  name SaveEXR
  tile_color 0xbcb50001
  xpos -28
  ypos 236
  addUserKnob {20 Controls}
  addUserKnob {1 filename_prefix_ l filename_prefix}
  filename_prefix_ upscale
  addUserKnob {4 tonemap_ l tonemap M {linear sRGB Reinhard}}
  tonemap_ sRGB
  addUserKnob {3 version_ l version}
  version_ 1
  addUserKnob {3 start_frame_ l start_frame}
  start_frame_ 1001
  addUserKnob {3 frame_pad_ l frame_pad}
  frame_pad_ 4
  addUserKnob {4 save_workflow_ l save_workflow M {ui api "ui + api" none}}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'filename_prefix_', \n        'tonemap_', \n        'version_', \n        'start_frame_', \n        'frame_pad_', \n        'save_workflow_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'image'\n            ], \n            'name': 'images'\n        \}\n    ], \n    'class_type': 'SaveEXR', \n    'outputs': \[], \n    'output_node': true\n\}"}
 }
  Input {
   inputs 0
   name images
  }
  Output {
   name Output1
   selected true
  }
 end_group
 Group {
  name Run
  tile_color 0x609e38ff
  note_font "Bitstream Vera Sans"
  xpos -28
  ypos 260
  addUserKnob {20 controls l Controls}
  addUserKnob {22 comfyui_submit l Submit t "Send a request to ComfyUI Server" T "if nuke.thisNode().knob('force_animation').value():\n    comfyui.run.animation_submit()\nelse:\n    comfyui.run.submit()" +STARTLINE}
  addUserKnob {22 backup_result l "Backup Result" t "Create a new Read Node from the last result" -STARTLINE T comfyui.read_media.save_image_backup()}
  addUserKnob {6 force_animation l "Force Animation" t "This allows you to recognize knob animations and send multiple requests to ComfyUI. Any node that alters the 'batch size' will cause a frame mismatch, The 'batch size' should always be 1, as 1 frame will be sent for each request, use this method only if you have some keyframes animated, as this way is slower !" +STARTLINE}
 }
  Input {
   inputs 0
   name Input
   xpos 145
   ypos 93
  }
  Output {
   name Output
   xpos 145
   ypos 257
  }
 end_group
 Output {
  name Output1
  xpos -28
  ypos 338
 }
end_group
