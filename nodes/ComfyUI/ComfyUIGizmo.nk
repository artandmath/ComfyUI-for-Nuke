set cut_paste_input [stack 0]
version 12.0 v8
push $cut_paste_input
Group {
 name ComfyUIGizmo
 tile_color 0xa2b275ff
 selected true
 xpos -1244
 ypos 313
 addUserKnob {20 controls l Controls}
 addUserKnob {26 comfyui_gizmo l ComfyUIGizmo +INVISIBLE T "This knob only allows the read and backup to be outside the gizmo !"}
 addUserKnob {41 comfyui_submit l Submit T QueuePrompt.comfyui_submit}
 addUserKnob {41 backup_result l "Backup Result" -STARTLINE T QueuePrompt.backup_result}
}
 Input {
  inputs 0
  name Input
  xpos 0
  ypos -396
 }
 Group {
  name SaveEXR
  tile_color 0xbcb50001
  selected false
  xpos 0
  ypos 330
  addUserKnob {20 Controls}
  addUserKnob {1 filename_prefix_ l filename_prefix}
  filename_prefix_ image
  addUserKnob {4 tonemap_ l tonemap M {linear sRGB Reinhard}}
  tonemap_ sRGB
  addUserKnob {3 version_ l version}
  version_ 1
  addUserKnob {3 start_frame_ l start_frame}
  start_frame_ 1001
  addUserKnob {3 frame_pad_ l frame_pad}
  frame_pad_ 4
  addUserKnob {4 save_workflow_ l save_workflow M {ui api "ui + api" none}}
  addUserKnob {22 data -STARTLINE +HIDDEN T "\{\n    'knobs_order': \[\n        'filename_prefix_', \n        'tonemap_', \n        'version_', \n        'start_frame_', \n        'frame_pad_', \n        'save_workflow_'\n    ], \n    'inputs': \[\n        \{\n            'opt': false, \n            'outputs': \[\n                'image'\n            ], \n            'name': 'images'\n        \}\n    ], \n    'class_type': 'SaveEXR', \n    'outputs': \[], \n    'output_node': true\n\}"}
 }
  Input {
   inputs 0
   name images
  }
  Output {
   name Output1
   selected true
  }
 end_group
 Group {
  name QueuePrompt
  tile_color 0x609e38ff
  note_font "Bitstream Vera Sans"
  xpos 0
  ypos 370
  addUserKnob {20 controls l Controls}
  addUserKnob {22 comfyui_submit l Submit t "Send a request to ComfyUI Server" T "if nuke.thisNode().knob('force_animation').value():\n    comfyui.queue_prompt.animation_submit()\nelse:\n    comfyui.queue_prompt.submit()" +STARTLINE}
  addUserKnob {22 backup_result l "Backup Result" t "Create a new Read Node from the last result" -STARTLINE T comfyui.read_media.save_image_backup()}
  addUserKnob {6 force_animation l "Force Animation" t "This allows it to recognize knob animations, sending multiple requests to ComfyUI, all frame sizes have to be 1, since 1 frame will be sent for each request !" +STARTLINE}
 }
  Input {
   inputs 0
   name Input
   xpos 145
   ypos 93
  }
  Output {
   name Output
   xpos 145
   ypos 257
  }
 end_group
 Output {
  name Output1
  xpos 0
  ypos 424
 }
end_group
